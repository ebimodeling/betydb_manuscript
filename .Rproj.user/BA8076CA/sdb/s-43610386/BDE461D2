{
    "contents" : "---\ntitle: \"Analyses, figures, and tables for BETYdb manuscript\"\noutput: github_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(cache = TRUE, autodep=TRUE, echo = FALSE, message = FALSE, results='hide')\n```\n\n## Trait Meta Analysis\n\n1. Estimate parameters for multiple crops\n2. Compare sources of variability Site, Treatment, Greenhouse\n3. For one site / two species, look at fetilizer effects\n\n## Assess potential productivity: \n\n* use meta-analysis estimates of traits to predict yield\n\n### model validation\n\n* compare BioCro predictions with observations\n\n# Results\n\n## Figure: Web Interface\n\n* Data Entry Workflow\n* Accessing Data\n* Visualizing Model output\n\n# Code\n\n```{r load-packages}\nlibrary(betydb)\nlibrary(pander)\nrequire(knitr)\nlibrary(data.table)\nlibrary(scales)\n\n\ntheme_set(theme_bw())\n\n```\n\n## Summary of content\n\n```{r record-counts, eval = FALSE}\nlibrary(dplyr)\nlibrary(PEcAn.utils)\nd <- list(host = 'ebi-forecast.igb.illinois.edu',\n          dbname = 'ebi_production',\n          user = 'bety',\n          password = 'bety')\n\nbety <- src_postgres(host = d$host, user = d$user, password = d$password, dbname = d$dbname)\n\ntraits_yields_view <- tbl(\n  bety, sql(\"select * from traits_and_yields_view_private where checked > -1\")) %>% collect\n\ndata_summary <- traits_yields_view %>% setDT\nsave(data_summary, file =\"data/data_summary.RData\")\nsave(traits_yields_view, file =\"data/traits_yields_view.RData\")\nwrite.csv(data_summary, file = 'data/data_summary.csv', row.names = FALSE)\nwrite.csv(traits_yields_view, file = 'data/traits_yields_view.csv', row.names = FALSE)\n```\n\n```{r}\nload('data/data_summary.RData')\n\n.d <- data_summary[,list(ntraits = sum(grepl('traits', result_type)), nyields = sum(grepl('yield', result_type)), total = sum(!is.na(result_type))), by = genus][order(total, decreasing = TRUE)]\n\nrbind(.d[!genus == \"\" ][1:55], .d[, list(genus = \"Total\", ntraits = sum(ntraits), nyields = sum(nyields), total = sum(total))]) %>% kable\n\nrbind(.d[!genus == \"\" ][1:15], .d[, list(genus = \"Total\", ntraits = sum(ntraits), nyields = sum(nyields), total = sum(total))]) %>% kable\n\n\n\n```\n\n### Status of records\n\n```{r record-status}\nload('data/traits_yields_view.RData')\n## Number of records checked\ntraits_yields_view[,list(n = length(n)),by='checked'] %>% kable\n## Number of public records\ntraits_yields_view[,list(n = length(n)),by='access_level'] %>% kable\n\n\n## Number of public bioenergy records\n\n# Bioenergy Genera\ngenera <- c(\"Miscanthus\", \"Panicum\", \"Populus\", \"Saccharum\", \"Pinus\", \"Salix\", \"Agave\", \"Robinia\", \"Pinus\")\n\n### evaluate proportion public v private\n.t <- traits_yields_view[genus %in% genera,list(n = length(n)),by='access_level,result_type'] \n.t %>% kable \n.t %>% group_by(access_level,result_type) %>% summarise(r = result_type,a = access_level,x = 100*n / sum(n))\n\ntraits_yields_view[genus %in% genera ,list(n = length(n)),by='access_level'] %>% kable\ntraits_yields_view[genus %in% genera, list(n = length(n)),by='access_level,result_type'] %>% kable\n\n```\n\n```{r biofuel_traits}\n\ntraits <-  c(\"Ayield\", \"leafN\", \"LAI\", \"SLA\", \"LMA\", \"root_respiration_rate\", \"stemN\", \"rootN\", \"root2shoot\", \"Vcmax\", \"leaf_turnover_rate\", \"Jmax\", \"c2n_leaf\")\ngenera_x_traits <- expand.grid(genus = genera, trait = c(traits))\n\nT <-  traits_yields_view %>% collect %>% setDT\ntrait_summary <- T[genus %in% genera & trait %in% traits, list(n = length(mean)), by = 'trait,genus']  \n\n\n#data(trait.dictionary, package = \"PEcAn.utils\")\n#write.csv(trait.dictionary, 'data/trait.dictionary.csv', row.names = FALSE)\ntrait.dictionary <- read.csv('data/trait.dictionary.csv')\ntrait.dictionary <- trait.dictionary %>% dplyr::select(trait = id, label = figid) %>% rbind(data.frame(trait = \"Ayield\", label = \"Yield\"))\n\ntrait_summary_full <- genera_x_traits %>%  \n  full_join(trait_summary, by = c('genus', 'trait')) %>%\n  left_join(trait.dictionary, by = 'trait')\n```\n\n\n```{r trait-plot}\n\ntrait_plot <- ggplot(data = trait_summary_full) +\n  geom_bar(aes(genus, n, fill = label), stat = \"identity\", position = \"dodge\", width = 0.75) +\n  scale_fill_manual(values=c(brewer_pal(palette=\"Paired\")(11), \"black\")) +\n  guides(fill = guide_legend(reverse=TRUE, title=\"Trait\" )) +\n  ylab(\"Number of Records\") + xlab(\"\") +\n  scale_y_log10(breaks = c(1, 10, 100, 1000, 10000), limits = c(1,4000)) +\n  scale_x_discrete(limits = c(\"Pinus\", \"Populus\", \"Salix\", \"Saccharum\", \"Panicum\", \"Miscanthus\")) +\n  coord_flip() +\n  theme_bw()  +\n  theme(#legend.position = c(0.9,0.25),\n        legend.background = element_rect(fill='white', color = 'white'),\n        axis.title = element_text(size = 24, vjust = 0.1),\n        legend.text = element_text(size = 20),\n        legend.title = element_text(size = 0, color = \"white\"),\n        axis.text = element_text(size = 20),\n        axis.ticks.y = element_blank(),\n        panel.grid = element_blank(),\n        panel.border = element_blank()) +\n  geom_vline(xintercept = 0)\n\n#print(trait_plot)\nggsave(plot = trait_plot, \n       filename = 'figures/trait_records_by_genus.png', \n       width = 18, height = 8, dpi = 200)\n## 1415 x 620 pixels\n\n```\n\n```{r trait-data-histogram}\n\nT <- traits_yields_view[!is.na(mean)&checked >=0] \nT[trait == 'c2n_leaf', `:=`(trait = 'leafN', mean = 48 / mean) ]\nT[trait == 'Ayield', trait := 'Yield']\nT[trait == 'LMA', `:=`(mean = 1/mean, trait = 'SLA')]\nT[trait == 'Vcmax', trait:='Vmax']\nhistogram_traits <- c(\"Yield\", \"leafN\", \"LAI\", \"SLA\",\"Vmax\", \"Jmax\")\nT <- T[trait %in% histogram_traits]\nT[, `:=`(trait = as.factor(trait))]\nlevels(T$trait)\nlevels(T$trait) <- c(\"Jmax\", \"LAI\", \"Leaf Nitrogen (%)\", \"Specific Leaf Area (m2/kg)\", \"Vmax\", \"Yield (Mg/ha)\")\n\nT[!genus %in% genera, `:=`(genus = 'Other')]\nT[,`:=`(genus = factor(genus, \n                       levels = c(\"Agave\", \"Miscanthus\", \"Panicum\", \"Pinus\", \"Populus\", \"Robinia\", \"Saccharum\", \"Salix\", \"Other\"),\n                       labels = c(\"Agave\", \"Miscanthus\", \"Panicum (Switchgrass)\", \"Pinus (Pine)\", \"Populus (Poplar)\", \"Robinia (Locust)\", \"Saccharum (Sugarcane)\", \"Salix (Willow)\", \"Other\")))]\n\ntrait_hist <- ggplot() +\n#   geom_histogram(bins = 25, data = T, aes(mean), fill = 'lightgrey',  alpha = 0.4) +\n   geom_histogram(bins = 25, data = T, aes(mean, fill = genus, color = genus)) +\n  scale_color_manual(values = c(brewer_pal(type = \"div\", palette = \"Set1\")(8), 'grey80')) +\n  scale_fill_manual(values = c(brewer_pal(type = \"div\", palette = \"Set1\")(8), 'grey80')) +\n  ylab(\"Count\") +\n  xlab(\"Observed Mean\") +\n  facet_wrap(~trait, scales = 'free', switch = \"x\") +\n  theme(#legend.position = c(0.9,0.25),\n        legend.background = element_rect(fill='white', color = 'white'),\n        axis.title = element_text(size = 24, vjust = 0.1),\n        legend.text = element_text(size = 20),\n        legend.title = element_text(size = 0, color = \"white\"),\n        axis.text = element_text(size = 20),\n        axis.ticks.y = element_blank(),\n        panel.grid = element_blank(),\n        panel.border = element_blank(),\n        strip.background = element_blank(), #http://docs.ggplot2.org/current/facet_wrap.html\n        strip.text = element_text(size = 20)\n) \n\nggsave(plot = trait_hist, \n      filename = 'figures/trait_histograms_by_genus.png', \n      width = 18, height = 6, dpi = 200)\n\n\n\n```\n## Trait Meta-analysis\n\nThis will be most easily run on a PEcAn Virtual Machine. \n\nhttps://opensource.ncsa.illinois.edu/projects/artifacts.php?key=PECAN\n\n```{r ma-data-import}\n## Import traits\nlibrary(PEcAn.all)\nlogger.setQuitOnSevere(severeQuits = FALSE)\nsettings <- read.settings(\"inputs/biofuelspecies.xml\")\n\nsettings$pfts <- get.trait.data(pfts = settings$pfts, \n                                modeltype = \"BIOCRO\", \n                                dbfiles = settings$run$dbfiles, \n                                database = settings$database$bety,   \n                                forceupdate = FALSE, \n                                trait.names = TRUE)\n\n```\n\n\n```{r trait-meta-analysis}\nsettings$database$bety$write = TRUE\nrun.meta.analysis(pfts = settings$pfts, iterations = 10000, \n                  dbfiles = settings$run$dbfiles, \n                  database = settings$database$bety)  \n\nget.parameter.samples(pfts=settings$pfts)\n\n```\n\n### Summarize Trait Data\n\n```{r data-contents}\nlibrary(data.table)\ntmpdata <- list()\nfor (i in seq(settings$pfts)){\n  pft <- settings$pfts[[i]]\n  print(pft$name)\n  \n  tmpdata[[pft$name]] <- cbind(pft = pft$name, fread(file.path(pft$outdir, \"trait.data.csv\")))\n}\nbiofuel.traitdata <- data.table(do.call(\"rbind\", tmpdata))\n\nsetnames(biofuel.traitdata, \"vname\", \"variable\")\n\n## convert leafN to c2n \nbiofuel.traitdata[variable == \"leafN\", `:=` (mean = 48/mean, vname = 'c2n_leaf')]\n\n\npander::pander(biofuel.traitdata[,list(n.obs = sum(n, is.na(n), na.rm = TRUE), n.records = length(n),  \n                                       mean = mean(mean), SE = sqrt(sum(stat^2, na.rm = TRUE))), \n                                 by = c(\"variable\", \"pft\")][order(variable)],\n               split.tables = 200, round = 2)\n\n```\n\n### Trait Meta-analysis summary\n\n#### Define Priors\n\n```{r trait-summary}\n\npriors <- NULL\nfor(pft in settings$pfts){\n  pftname <- pft$name\n  load(file.path(settings$outdir, \"pft\", pftname, \"prior.distns.Rdata\"))\n  for(trait in rownames(prior.distns)){\n    tmp <- do.call(paste0(\"q\", prior.distns[trait,\"distn\"]), list(c(0.025, 0.5, 0.975), prior.distns[trait,]$parama, prior.distns[trait,]$paramb))\n    priors <- rbind(priors, data.table(pft=gsub(\"biocro.\", \"\", pftname), variable=trait, median = tmp[2], lcl=tmp[1], ucl=tmp[3]))\n  \n  }\n}\n\n```\n\n### Traits\n\n```{r meta-analysis-plot-dataframe}\nlibrary(cowplot)\nlibrary(jagstools)\nma.output <- list()\npriors.list <- list()\nfor(pft in settings$pfts){\n  load(file.path(pft$outdir, \"trait.mcmc.Rdata\"))\n  ma.output[[pft$name]] <- trait.mcmc\n  load(file.path(pft$outdir, \"prior.distns.Rdata\"))\n  priors.list[[pft$name]] <- prior.distns\n  \n}\n\ntrait.summary <- NULL\nprior.summary <- NULL\nfor(pft in settings$pfts){\n  for(trait in c(\"leaf_respiration_rate_m2\", \"stomatal_slope.BB\", \"SLA\", \"Vcmax\")){\n    if(trait %in% names(ma.output[[pft$name]])){\n      x <- ma.output[[pft$name]][[trait]]\n      z <- signif(jagsresults(x = x, params = c('beta.o', 'beta.site', 'beta.trt', 'beta.ghs', 'sd.y', 'sd.site', 'sd.trt')), 4)\n      d <- data.table(type = 'posterior', pft = pft$name, variable = trait, param = rownames(z), z) \n      trait.summary <- rbind(trait.summary, d)\n      rm(x); rm(z)\n    } \n    prior.distns <- priors.list[[pft$name]]\n    x1 <-  do.call(paste0(\"r\", prior.distns[trait,\"distn\"]), list(10000, prior.distns[trait,]$parama, prior.distns[trait,]$paramb))\n    z1 <- cbind(type = 'prior', signif(data.table(mean = mean(x1), sd = sd(x1), t(quantile(x1, c(0.025, 0.25, 0.5, 0.75, 0.975)))), 4))\n    rownames(z1) <- 'beta.o'\n    prior.summary <- rbind(prior.summary, data.table(pft = pft$name, variable = trait, param = rownames(z1), z1))\n  }\n  rm(x1); rm(z1)\n}\n\nt <- rbind(trait.summary, prior.summary)\nt[, `:=`(prior = type == 'prior')]\nt[, `:=`(posterior = type == 'posterior')]\n\n#vars <- c(\"SLA\", \"Vcmax\",  \"leaf_respiration_rate_m2\", \"stomatal_slope.BB\")#, \"c2n_leaf\")#, \"cuticular_cond\", \"extinction_coefficient_diffuse\", \"growth_respiration_coefficient\", \"Jmax\")\n\nvars <- c(\"SLA\", \"Vcmax\",  \"leaf_respiration_rate_m2\")#, \"stomatal_slope.BB\", \"c2n_leaf\")#, \"cuticular_cond\", \"extinction_coefficient_diffuse\", \"growth_respiration_coefficient\", \"Jmax\")\n\n```\n\n```{r ma_plots}\nma.plots <- list()\n\nts1 <- t[!(pft %in% c('saof', \"Miscanthus_x_giganteus\")) & param == 'beta.o' & !(variable == 'stomatal_slope.BB') & !prior]\n\nn_traits <- biofuel.traitdata[variable %in% vars & pft %in% c(\"misp\", \"pavi\", \"salix\", 'populus'), list(n = length(mean)), by = 'variable,pft']\n\nts2 <- merge(ts1, n_traits, by = c('variable', 'pft'))\n\nfor(var in vars){\n  ma.plots[[var]] <- ggplot(data = ts2[variable == var], aes(pft, y = mean)) + \n    coord_flip() +\n    geom_pointrange(aes(ymin = mean-sd, ymax =  mean + sd), size = 1) +\n    geom_text(aes(pft, y = mean, label = paste0(\"(\", n, \")\")), vjust = 2, size =6) +\n    expand_limits(x = 0, y = 0) + \n    coord_flip() + xlab(\"\") +\n    scale_x_discrete(breaks=c(\"salix\", \"populus\", \"pavi\", \"misp\"),\n                     labels=c(\"Willow\", \"Poplar\", \"Switchgrass\", \"Miscanthus\")) +\n    scale_y_continuous(expand = c(0,0))\n    theme(legend.position=\"none\")\n  \n}\nma.plots$SLA <- ma.plots$SLA + ylab(\"SLA \\n (m2 / kg)\") \nma.plots$Vcmax <- ma.plots$Vcmax + ylab(\"Vcmax / Vpmax at 25C \\n (umol CO2 m-2 s-1)\")\nma.plots$leaf_respiration_rate_m2 <- ma.plots$leaf_respiration_rate_m2 + ylab(expression(\"Leaf Respiration Rate at 25C \\n umol CO2 m-2 s-1\")\n#ma.plots$stomatal_slope.BB <- ma.plots$stomatal_slope.BB + ylab(\"Stomatal Slope \\n Ball Berry Model (ratio)\")\n\nfor(i in 1:length(ma.plots)){\n  ma.plots[[i]] <- ma.plots[[i]] +\n    theme(axis.text.x = element_text(size = 16),\n        axis.title = element_text(size = 18),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_line(color = 'white')#,\n        #axis.line.y = element_line(color = 'white')\n        )\n}\n\nlabels <- ggplot() + \n  geom_text(aes(x = factor(1:4), y = 0, label = as.factor(c(\"Willow\", \"Poplar\", \"Switchgrass\", \"Miscanthus\"))), hjust = 1, vjust = -0.5, size = 8, position = position_dodge(width=1.5)) + \n  coord_flip() +\n  scale_y_continuous(limits = c(0, 0))+ ylab('genus\\n newline') +\n  xlab(label = \"  \\n  \") +\n  theme(axis.text.x = element_text(color = 'white', size = 16),\n        axis.text.y = element_blank(),\n        axis.title = element_text(color = 'white', size = 18),\n        axis.ticks = element_line(color = 'white'),\n        axis.line.x = element_line(color = 'white'),\n        axis.line.y = element_line(color = 'white'))\n\n\nma.plotgrid <- plot_grid(plotlist = c(list(labels = labels), ma.plots), \n                         nrow = 1)\nma.plotgrid\nggsave(plot = ma.plotgrid, \n       filename = 'figures/ma.plotgrid.png', \n       width = 18, height = 4, dpi = 200)\n\n```\n\n```{r}\n\nsla_nsites <- ts1[,list(nsites = sum(grepl(\"beta.site\", param))), by = pft]\nsla_sd <- ts1[variable == \"SLA\" & grepl('sd.site', param)]\n\nsla_sd <- merge(sla_sd, sla_nsites, by = 'pft')\n\nggplot(data = sla_sd, aes(x = pft, y = mean)) + \n  coord_flip() +\n  geom_pointrange(aes(ymin = `25%`, ymax = `75%`), size = 1.2) +\n  geom_text(aes(label = paste0(\"(\", nsites, \")\")), vjust = -3, size = 5) +\n  expand_limits(y = 0) + \n  coord_flip() + xlab(\"\") + ylab(\"SD among sites\")\n  scale_x_discrete(breaks=c(\"salix\", \"populus\", \"pavi\", \"misp\"),\n                     labels=c(\"Willow\", \"Poplar\", \"Switchgrass\", \"Miscanthus\")) +\n  theme(axis.text = element_text(size = 16),\n        axis.title = element_text(size = 18))\n\n\n```\n### Meta-analysis of Miscanthus and Switchgrass yields\n\n#### Extract, subset Miscanthus and Switchgrass yield data\n\n* removed data with no fert or planting date\n* only Miscanthus and Switchgrass\n* only >= 3 years after planting\n* following Heaton et al 2008 http://onlinelibrary.wiley.com/doi/10.1111/j.1365-2486.2008.01662.x/pdf\n\n**heaton model**\n\n> yield = harvestdate + precip + gdd + species*(harvestdate + precip + gdd)\n\n\n```{r}\n\ndetach(\"package:raster\", unload=TRUE, force = TRUE)\ndetach(\"package:plyr\", unload=TRUE, force = TRUE)\nlibrary(dplyr)\nlibrary(data.table)\nlibrary(ggplot2)\n## connection to database\nd <- list(host = 'ebi-forecast.igb.illinois.edu',\n          dbname = 'ebi_production',\n          user = 'bety',\n          password = 'bety')\nbety <- src_postgres(host = d$host, user = d$user, password = d$password, dbname = d$dbname)\n\n## query and join tables\nspecies <- tbl(bety, 'species') %>% \n  dplyr::select(id, scientificname, genus) %>% \n  dplyr::rename(specie_id = id)\n\nsites <- tbl(bety, sql(\n  paste(\"select id as site_id, st_y(st_centroid(sites.geometry)) AS lat,\",\n        \"st_x(st_centroid(sites.geometry)) AS lon,\",\n        \" sitename, city, country from sites\"))\n  )\n\ncitations <- tbl(bety, 'citations') %>%\n  select(citation_id = id, author, year, title)\n\nyields <- tbl(bety, 'yields') %>%\n  select(id, date, mean, n, statname, stat, site_id, specie_id, treatment_id, citation_id, cultivar_id) %>% \n  left_join(species, by = 'specie_id') %>%\n  left_join(sites, by = 'site_id') %>% \n  left_join(citations, by = 'citation_id')\n\nmanagements_treatments <- tbl(bety, 'managements_treatments') %>%\n  select(treatment_id, management_id)\n\ntreatments <- tbl(bety, 'treatments') %>% \n  dplyr::mutate(treatment_id = id) %>% \n  dplyr::select(treatment_id, name, definition, control)\n\nmanagements <- tbl(bety, 'managements') %>%\n  filter(mgmttype %in% c('fertilizer_N', 'fertilizer_N_rate', 'planting', 'irrigation')) %>%\n  dplyr::mutate(management_id = id) %>%\n  dplyr::select(management_id, date, mgmttype, level, units) %>%\n  left_join(managements_treatments, by = 'management_id') %>%\n  left_join(treatments, by = 'treatment_id') \n\n\nnitrogen <- managements %>% \n  filter(mgmttype == \"fertilizer_N_rate\") %>%\n  select(treatment_id, nrate = level)\n\nplanting <- managements %>% filter(mgmttype == \"planting\") %>%\n  select(treatment_id, planting_date = date)\n\nplanting_rate <- managements %>% filter(mgmttype == \"planting\") %>%\n  select(treatment_id, planting_date = date, planting_density = level) \n\nirrigation <- managements %>% \n  filter(mgmttype == 'irrigation') \n\nirrigation_rate <- irrigation %>% \n  filter(units == 'mm', !is.na(treatment_id)) %>% \n  group_by(treatment_id, year = sql(\"extract(year from date)\"), units) %>% \n  summarise(irrig.mm = sum(level)) %>% \n  group_by(treatment_id) %>% \n  summarise(irrig.mm.y = mean(irrig.mm))\n\nirrigation_boolean <- irrigation %>%\n  collect %>%   \n  group_by(treatment_id) %>% \n  mutate(irrig = as.logical(mean(level))) %>% \n  select(treatment_id, irrig = irrig)\n\nirrigation_all <- irrigation_boolean %>%\n  full_join(irrigation_rate, copy = TRUE, by = 'treatment_id')\n\ngrass_yields <- yields %>% \n  filter(genus %in% c('Miscanthus', 'Panicum')) %>%\n  left_join(nitrogen, by = 'treatment_id') %>% \n  #left_join(planting, by = 'treatment_id') %>% \n  left_join(planting_rate, by = 'treatment_id') %>% \n  left_join(irrigation_all, by = 'treatment_id', copy = TRUE) %>% \n  collect %>% \n  mutate(age = year(date)- year(planting_date),\n         nrate = ifelse(is.na(nrate), 0, nrate),\n         SE = ifelse(statname == \"SE\", stat, ifelse(statname == 'SD', stat / sqrt(n), NA)),\n         continent = ifelse(lon < -30, 'united_states', ifelse(lon < 75, 'europe', 'asia'))) %>% \n  filter(!duplicated(.))\n\nsave(grass_yields, file = \"~/dev/bety_manuscript/data/grass_yields.RData\")\n\ng <- grass_yields %>% setDT \nif(nrow(g[is.na(age) & age < 0])>0) stop()\n\n\nggplot(data = grass_yields, aes(lon,lat)) + \n  geom_point(aes(color = genus, size = mean), \n             alpha = 0.1)\n```\n\n### Differences in Data since Heaton et al 2004\n\n```{r heaton-2004-data}\n\nheaton_authors <- c(\"Beale\", \"Beuch\", \"Ercoli\", \"Himken\", \"Jorgensen\", \n                    \"Lewandowski\", \"Schwarz\", \"Muir\", \"Ma\", \"Reynolds\", \"Sanderson\",\n                    \"Madakadze\", \"Clifton-Brown\")\nheaton_authors[!heaton_authors %in% unique(grass_yields$author)]\n### hmmm....\n\ngrass_yields %>% filter(genus == 'Miscanthus' & lon < -20) %>% summarise(n = length(genus))\n\n```\n\n\n### Climate parms\n\n#### Daymet\n\n```{r daymet-metdata, eval=FALSE}\n\n#install_bitbucket(\"khufkens/daymetr\")\nlibrary(DaymetR)\nlibrary(lubridate)\nlibrary(data.table)\ny <- grass_yields %>% filter(!is.na(site_id), !is.na(lat)) %>% \n  select(site_id, lat, lon, date) %>% \n  distinct %>% data.frame %>% data.table \n\ny[,`:=`(year = year(ymd(date)))]\n\n\ndaymetsites <- y[year %in% 1980:2014 & lon < -40 & lat > 0 ,\n                 list(start = min(year), end = max(year)), by = 'lat,lon,site_id']\nsave(daymetsites, file = 'daymetsites.RData')\n#system(\"rsync daymetsites.RData dlebauer:\")\n\ndaymet <- list()\nidx <- 0\nfor(siteid in unique(daymetsites$site_id)){\n  idx <- idx+1 \n  s <- daymetsites[site_id == siteid]\n  file <- paste(s$site_id, s$start, paste0(s$end, \".csv\"), sep = '_')\n  \n  if(!file.exists(file)){\n    download.daymet(site = s$site_id, lat = s$lat, lon = s$lon, start_yr = s$start, end_yr = s$end)\n  }\n  \n  if(file.info(file)$size > 0){\n    met <- fread(file)\n  } else {\n    met <- data.table(year = NA, yday = NA, `tmax (deg c)` = NA, \n    `tmin (deg c)` = NA, `dayl (s)` = NA, `prcp (mm/day)` = NA, \n    `srad (W/m^2)` = NA, `swe (kg/m^2)` = NA, `vp (Pa)` = NA)\n  }\n\n  daymet[[idx]] <- cbind(site_id = siteid, met) \n\n  save(daymet, file = 'daymet.RData')\n}\n\nload(\"~/dev/bety_manuscript/data/daymet.RData\")\n\ndaymet <- rbindlist(daymet)\nsetnames(daymet, \n         c(\"yday\", \"tmax (deg c)\", \"tmin (deg c)\", \"dayl (s)\", \"prcp (mm/day)\", \"srad (W/m^2)\", \"swe (kg/m^2)\",  \"vp (Pa)\"),\n         c('doy', 'tmax', 'tmin', 'day1', 'precip', 'srad', 'swe', 'vp'))\ndaymet <- daymet[!is.na(tmax)]         \n\ngd <- daymet[,list(gd = ifelse( sum(tmin,tmax)/2 > 10, (tmax + tmin) / 2 - 10, 0)), by = 'site_id,year,doy']\ngdd <- gd[,list(daymet_gdd = sum(gd)), by = 'site_id,year']\np <- daymet[,list(daymet_precip = sum(precip)), by = 'site_id,year']\nsummer_p <- daymet[doy %in% yday(ymd(paste0(year, \"-04-01\"))):yday(ymd(paste0(year,\"-09-30\"))), list(summer_precip = sum(precip)),by = 'site_id,year']\n\ndaymet_vars <- merge(gdd, p, by = c('site_id', 'year'))\ndaymet_vars <- merge(daymet_vars, summer_p, by = c('site_id', 'year'))\n\nsave(daymet_vars, file = \"~/dev/bety_manuscript/data/daymet_vars.RData\")\n```\n\n### CruNCEP\n\n```{r cruncep-metdata, eval=FALSE}\n\ny2 <- y[year %in% 1950:2015 ,list(start = min(year), end = max(year)), by = 'lat,lon,site_id']\n\n### Cruncep goes only to 2010. needto get data from pre-2010\ny2[end == 2011]$end <- 2010 \ny2[start == 2011]$start <- 2010 \n\nwrite.csv(y2, '~/dev/bety_manuscript/data/sites2.csv')\nsystem(\"rsync ~/dev/bety_manuscript/data/sites2.csv biocluster:\")\n\n## on biocluster\nlibrary(data.table)\nlibrary(PEcAn.data.atmosphere)\nlibrary(PEcAn.all)\nlibrary(ncdf4)\nlibrary(udunits2)\n\nsites <- fread(\"~/sites2.csv\")\nmet.nc <- nc_open(\"/home/groups/ebimodeling/met/cruncep/all.nc\")\nsitemet <- list()\nfor(siteid in unique(sites$site_id)){\n    logger.info(\"extracting data for site_id\", siteid)\n    sitemet[[as.character(siteid)]] <- \n        sites[site_id == siteid,\n              load.cfmet(met.nc = met.nc, lat = lat, lon = lon,\n                         start.date=paste0(start, \"-01-01\"),\n                         end.date = paste0(end, \"-12-31\"))]\n    save(sitemet, file = '~/sitemet.RData')\n}\n\nsystem(\"rsync -routi biocluster:sitemet.RData ~/dev/bety_manuscript/data/\")\n\n\n## on ebi-forecast\nload(\"~/dev/bety_manuscript/data/sitemet.RData\")\nsitemet[[\"281\"]] <- NULL\n\nlibrary(udunits2)\nlibrary(lubridate)\nlibrary(PEcAn.data.atmosphere)\nlibrary(data.table)\nz <- lapply(sitemet, \n  function(x) {\n    PEcAn.data.atmosphere::cfmet.downscale.subdaily(x, output.dt = 1)\n  }\n)\n\nzz <- lapply(z,\n             function(x){\n               as.data.table(PEcAn.BIOCRO::cf2biocro(x))\n               })\n\nfor(siteid in names(zz)){\n  zz[[siteid]][, `:=`(site_id = as.numeric(siteid))]\n}\n\ncruncepmet <- rbindlist(zz)\n\n\ngd <- cruncepmet[,list(gd = ifelse(mean(Temp) > 10, (max(Temp) + min(Temp)) / 2  - 10, 0)), by = 'site_id,year,doy']\ngdd <- gd[,list(cruncep_gdd = sum(gd)), by = 'site_id,year']\n\np <- cruncepmet[,list(cruncep_precip = sum(precip)), by = 'site_id,year']\nsummer_p <- cruncepmet[doy %in% yday(ymd(paste0(year, \"-04-01\"))):yday(ymd(paste0(year,\"-09-31\"))), list(summer_precip = sum(precip)),by = 'site_id,year']\n\ncruncep_vars <- merge(gdd, p, by = c(\"site_id\", \"year\"))\ncruncep_vars <- merge(cruncep_vars, summer_p, by = c(\"site_id\", \"year\"))\nsave(cruncep_vars, file = \"~/dev/bety_manuscript/data/cruncep_vars.RData\")\n```\n\n#### Compare Cruncep and Daymet\n\n\n\n```{r}\nload(\"~/dev/bety_manuscript/data/cruncep_vars.RData\")\nload(\"~/dev/bety_manuscript/data/daymet_vars.RData\")\n```\n\n\n```{r}\nmet <- cruncep_vars %>% inner_join(daymet_vars, by = c('site_id','year'))\nrequire(ggplot2)\nggplot(data = met) + \n  geom_point(aes(cruncep_gdd, daymet_gdd, group = site_id))\n\nggplot(data = met) + \n  geom_point(aes(cruncep_precip, daymet_precip, group = site_id))\n\nggplot(data = met) + \n  geom_point(aes(summer_precip.x, summer_precip.y, group = site_id))\n\nmet$site <- as.factor(met$site_id)\nmet$year <- as.factor(met$year)\n\nprecip_model <- lm(cruncep_precip ~ daymet_precip -1, data = met)\ngdd_model <- lm(cruncep_gdd ~ daymet_gdd -1, data = met)\nsummer_model <- lm(summer_precip.x ~ summer_precip.y -1, data = met)\nsummary(precip_model)\nsummary(gdd_model)\nsummary(summer_model)\n\n```\n\n#### Fill in missing Cruncep data w/ Daymet\n\nUse linear model to describe relationship between met variables derived from predict Cruncep from Daymet. Then use these models to estimate what Cruncep would have generated based on values derived from DayMet (this extends dataset to end of 2011) \n\n```{r fill-missing-daymet}\n\nsetnames(daymet_vars, 'summer_precip', 'summer_precip.y')\ndaymet_vars[,`:=`(cruncep_precip = predict(precip_model, newdata = daymet_vars), \n                  cruncep_gdd = predict(gdd_model, newdata = daymet_vars),\n                  summer_precip = predict(summer_model, newdata = daymet_vars))]\ndaymet_est <- daymet_vars[,list(site_id, year, cruncep_precip, cruncep_gdd, summer_precip.y)] %>% \n  anti_join(cruncep_vars, by = c('site_id','year'))\n\nsetnames(daymet_est, 'summer_precip.y', 'summer_precip')\nmet <- rbind(cruncep_vars, daymet_est)\nsave(met, file = \"~/dev/bety_manuscript/data/met.RData\")\n```\n\n## Yield vs Climate, Fert Analysis\n\n#### Merge Met vars w/ yield, fertilization, and irrigation \n\n```{r merge-met-yield}\nload(\"~/dev/bety_manuscript/data/met.RData\")\nload(\"~/dev/bety_manuscript/data/grass_yields.RData\")\nlibrary(data.table)\nlibrary(lubridate)\nlibrary(dplyr)\ngg <- grass_yields %>% filter(!is.na(site_id), !is.na(lat)) %>% \n  dplyr::select(site_id, lat, lon, date, genus, scientificname, lat, lon, sitename, mean, n, SE,\n         nrate, planting_date, irrig, irrig.mm.y, age, continent) %>% \n  mutate(year = year(ymd(date))) %>% \n  left_join(met, by = c('site_id', 'year'))\n\n\nlibrary(lme4)\n\ngg <- gg %>% filter(!duplicated(gg))\nggg <- gg %>% \n  mutate(gdd = cruncep_gdd, precip = cruncep_precip, summer_precip = summer_precip, nrate = nrate, year = year, abslat = abs(lat)) %>% \n  mutate(sitename = ifelse(grepl(\"EBI Energy farm\", sitename), \"EBI Energy farm\", sitename),\n         continent = ifelse(lon < -30, \"North America\", ifelse(lon > 100, \"China\", \"Europe\"))) \n\ngggg <- ggg %>% filter(gdd < 2900 & gdd > 970 & nrate <= 205 & age < 11 & gdd > 600 & age > 2)\n\n## 'no site' = no site random effects, as with original Heaton paper\nmisp_lm <- lm(mean ~ nrate + summer_precip + gdd + age, data = gggg, \n              subset = genus == \"Miscanthus\")\n\n\ncontinent_misp_lm <- lm(mean ~ continent* nrate + continent* summer_precip + continent* gdd + continent* age, data = gggg, \n              subset = genus == \"Miscanthus\" & lat < 100)\n\npavi_lm <- lm(mean ~ nrate + summer_precip + gdd + age, data = gggg, \n              subset = genus == \"Panicum\")\nall_lm <- lm(mean ~ genus * nrate + genus * summer_precip + genus * gdd + genus * age, data = gggg)\nmisp_re <- lme4::lmer(mean ~ nrate + summer_precip + gdd  + age + (1 | sitename / year), \n                  data = gggg, subset = genus == \"Miscanthus\")\npavi_re <- lme4::lmer(mean ~ nrate + summer_precip + gdd  + age + (1 | sitename / year), \n                  data = gggg, subset = genus == \"Panicum\")\n\nall_re <- lme4::lmer(mean ~ nrate + summer_precip + gdd  + age + genus:nrate + genus:summer_precip + genus:gdd  + genus:age + (1 | sitename / year), \n                  data = gggg)\n\nmisp_continent_re <- lme4::lmer(mean ~ nrate + summer_precip + gdd  + age + continent:nrate + continent:summer_precip + continent:gdd  + continent:age + (1 | sitename / year), \n                  data = gggg, subset = genus == 'Miscanthus')\npavi_continent_re <- lme4::lmer(mean ~ nrate + summer_precip + gdd  + age + continent:nrate + continent:summer_precip + continent:gdd  + continent:age + (1 | sitename / year), \n                  data = gggg, subset = genus == 'Panicum' & continent %in% c(\"Europe\", \"North America\") )\n\nlibrary(texreg)\nlibrary(gridExtra)\n\n## Heaton et al 2004 looked at summer (Apr-Sept) precip\n## Wang et al 2010 looked at annual precip\n\n```\n\n\n\n```{r}\n\n#library(lmerTest)\nsummary(pavi_re)\nsummary(misp_re)\n\ntexreg(l = list(misp_re, pavi_re),single.row = TRUE,\n       digits = 4, dcolumn = TRUE,\n       custom.model.names = c('Miscanthus', 'Switchgrass'), custom.coef.names = c('Intercept', 'Nitrogen Fertilization', 'Summer Precipitation', 'Growing Degree Days', \"Stand Age\"))\n\nmy_coefs <- function(mod){\n  a <- data.frame(coef(summary(mod)), stringsAsFactors = FALSE)\n  b <- cbind(parameter = rownames(a), a, \n             p.z = round(2 * (1 - pnorm(abs(a[,'t.value']))), 4))\n  return(b)\n}\n\n#pavi_lm_coef <- my_coefs(pavi_lm) # lm\npavi_re_coef <- my_coefs(pavi_re) # lme4 random effect of site\n#misp_lm_coef <- my_coefs(misp_lm)\nmisp_re_coef <- my_coefs(misp_re)\n\nrequire(knitr)\nrbind(misp_re_coef,\n  pavi_re_coef) %>% \n  kable('markdown', row.names = FALSE, digits = 4)\n#  kable(format = 'latex', row.names = FALSE, digits = 4, booktabs = TRUE)\n\n```\n\n```{r using-effects-package}\nlibrary(effects)\npavi_effects <- lapply(allEffects(pavi_re), \n                       function(x) data.frame(genus = 'Panicum', as.data.frame(x)))\nmisp_effects <- lapply(allEffects(misp_re), \n                       function(x) data.frame(genus = 'Miscanthus', as.data.frame(x)))\n           \neff <- list(nrate = rbind(pavi_effects$nrate, misp_effects$nrate),\n            summer_precip = rbind(pavi_effects$summer_precip, misp_effects$summer_precip),\n            gdd = rbind(pavi_effects$gdd, misp_effects$gdd),\n            age = rbind(pavi_effects$age, misp_effects$age))\n\np1 <-  ggplot(data = ggg, aes(x = nrate, color = genus)) +\n  geom_point(aes(x = jitter(nrate, 20), y = mean), alpha = 0.25, size = 0.5) +\n  geom_smooth(data = eff$nrate, aes(y = fit), method = 'lm', fullrange = FALSE, se = FALSE) +\n  #geom_smooth(data = eff$nrate, aes(y = fit + se), method = 'lm', size= 0.5, linetype = 2, fullrange = FALSE) +\n  #geom_smooth(data = eff$nrate, aes(y = fit - se), method = 'lm', size= 0.5, linetype = 2, fullrange = FALSE) + \n  scale_colour_brewer(palette = \"Set1\", labels = c('Miscanthus', 'Switchgrass')) +\n  ylab(expression(Yield~~\"(Mg \"*ha^\"-1\"*yr^\"-1\"*\")\")) +\n  xlab(expression(\"Nitrogen Fertilization Rate\"~~\"(kg \"*ha^\"-1\"*yr^\"-1\"*\")\")) + \n  xlim(0,250)+\n  theme(axis.text = element_text(size = 18), axis.title = element_text(size = 18), legend.position = 'none')\n\np2 <-  ggplot(data = ggg, aes(x = summer_precip, color = genus)) +\n  geom_point(aes(y = mean), alpha = 0.25, size = 0.5) +\n  geom_smooth(data = eff$summer_precip, aes(y = fit), method = 'lm', fullrange = FALSE, se = FALSE) +\n  scale_colour_brewer(palette = \"Set1\") +\n  ylab(\" \") +\n  xlab(expression(\"Growing Season Precipitation\"~~\"(mm \"*yr^\"-1\"*\")\")) +\n  theme(axis.text = element_text(size = 18), axis.title = element_text(size = 18), legend.position = 'none')\n\np3 <-  ggplot(data = ggg, aes(x = gdd, color = genus)) +\n  geom_point(aes(y = mean), alpha = 0.25, size = 0.5) +\n  geom_smooth(data = eff$gdd, aes(y = fit), method = 'lm', fullrange = FALSE, se = FALSE) +\n  scale_colour_brewer(palette = \"Set1\") +\n  ylab(\" \") +\n  xlab(expression(paste(\"Growing Degree Days\", ~~(degree*C)))) +\n  theme(axis.text = element_text(size = 18), axis.title = element_text(size = 18), legend.position = 'none')\n\np4 <- ggplot(data = ggg, aes(x = age, color = genus)) +\n  geom_point(aes(x = jitter(age, 0.25), y = mean), alpha = 0.25, size = 0.5) +\n  geom_smooth(data = eff$age, aes(y = fit), method = 'lm', fullrange = FALSE, se = FALSE) +\n  scale_colour_brewer(palette = \"Set1\") + \n  ylab(\" \") + \n  xlab(\"Stand Age (yr)\") + \n  xlim(0, 10) + \n  theme(axis.text = element_text(size = 18), axis.title = element_text(size = 18), legend.position = c(0.75,0.9), legend.title = element_blank(), legend.text = element_text(size = 18))\n\np <- list(p1, p2, p3, p4)\n\npp <- plot_grid(plotlist = p, nrow = 1)\n\n\nggsave(plot = pp, \n       filename = 'figures/yield_ma_plots.png', \n       width = 20, height = 4, dpi = 200)\n\n```\n\n",
    "created" : 1467668352444.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "25741583",
    "id" : "BDE461D2",
    "lastKnownWriteTime" : 1467669630,
    "path" : "~/dev/gcbb_manuscript/gcbb_manuscript.Rmd",
    "project_path" : "gcbb_manuscript.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}